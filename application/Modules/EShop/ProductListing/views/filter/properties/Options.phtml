<?php
namespace JetApplicationModule\EShop\Catalog;

use Jet\MVC_View;
use JetApplication\ProductListing;
use JetApplication\Property_Options_Option_EShopData;
use JetApplication\Property_EShopData;

/**
 * @var MVC_View $this
 * @var ProductListing $listing
 * @var Property_EShopData $property
 * @var Property_Options_Option_EShopData[] $_options
 */

$listing = $this->getRaw('listing');
$property = $this->getRaw('property');


$initial_map = $listing->getInitialMap();

$option_ids = $initial_map->getPropertyOptionIds( $property->getId() );
if( !$option_ids ) {
	return;
}


$all_property_options = $listing->getPropertyOptions();

$options = [];
foreach($option_ids as $option_id) {
	$option_id = (int)$option_id;
	
	if(isset($all_property_options[$option_id])) {
		$options[$option_id] = $all_property_options[$option_id];
	}
	
}

if(!$options) {
	return;
}


$options_filter = $listing->getFilter()->getPropertyOptionsFilter();
$property_id = $property->getId();


foreach($options as $option_id=>$option):
		$selected = $options_filter->getOptionIsSelected( $property_id, $option_id );
		
		if(!$selected) {
			$count = $listing->getPropertyOptionCount( $property_id, $option_id );
			$disabled = $count==0;

			if($disabled) {
				$label = $option->getFilterLabel();
				$css_class = 'product_listing_filter_option_disabled';
				$param  = 'disabled';
			} else {
				$css_class = 'product_listing_filter_option';
				$label = $option->getFilterLabel().' ('.$count.')';
				$param  = '';
			}
		} else {
			$label = $option->getFilterLabel();
			$css_class = 'product_listing_filter_option_selected';
			$param  = 'checked';
		}
		
		$id = 'filter_property_'.$property_id.'_'.$option_id;
		
		?>
		<div class="<?=$css_class?>">
			<div>
				<input
						type="checkbox"
						class="lf-option"
						data-property="<?=$property_id?>"
						value="<?=$option_id?>"
					<?=$param?>
						onchange="listing.submitFilter()"
						id="<?=$id?>">
			</div>
			<div>
				<label for="<?=$id?>"><?=$label?></label>
			</div>
		</div>
<?php
endforeach;