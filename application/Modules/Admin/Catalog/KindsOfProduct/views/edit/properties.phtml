<?php
namespace JetApplicationModule\Admin\Catalog\KindsOfProduct;

use Jet\Http_Request;
use Jet\MVC_View;
use Jet\Tr;
use JetApplication\Admin_Managers;

/**
 * @var MVC_View   $this
 * @var KindOfProduct $kind_of_product
 */

$kind_of_product = $this->getRaw('kind_of_product');

$form = $kind_of_product->getEditForm();

$editable = !$form->getIsReadonly();

echo $this->controller->getEditorManager()->renderToolbar();
?>

<?php if($editable): ?>
	<script type="text/javascript">
		
		function addGroup( group_id ) {
			$('#layout').load('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'add_group'],
				unset_GET_params:['property_id','group_id'])?>&group_id='+group_id,
				function () {
					window['select_property_group'].startSelect();
				});
			
		}

		function addProperty( property_id, group_id ) {
			if(!group_id) {
				group_id = 0;
			}
			
			$('#layout').load('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'add_property'],
				unset_GET_params:['property_id','group_id'])?>&group_id='+group_id+'&property_id='+property_id,
				function() {
					window['add_property_'+group_id].startSelect();
				}
			);
		}
		
		function removeProperty( group_id, property_id ) {
			$('#layout').load('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'remove_property'],
				unset_GET_params:['property_id','group_id'])?>&group_id='+group_id+'&property_id='+property_id);
		}
		
		function removeGroup( group_id ) {
			$('#layout').load('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'remove_group'],
				unset_GET_params:['property_id','group_id'])?>&group_id='+group_id);
			
		}

		function setIsVariantMaster(property_id, state) {
			$.get('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'set_is_variant_master'],
				unset_GET_params:['property_id','group_id'])?>&property_id='+property_id+'&state='+(state?1:0));
		}

		function setShowOnProductDetail(property_id, state) {
			$.get('<?=Http_Request::currentURI(
				set_GET_params:['p_action'=>'set_show_on_product_detail'],
				unset_GET_params:['property_id','group_id'])?>&property_id='+property_id+'&state='+(state?1:0));
		}
		
		const sortLayout = {
			init: function() {
				$('#layout')['sortable']({
					stop: function () {
						sortLayout.setSort();
					}
				});
			},
			
			setSort: function () {
				let layout_area = $('#layout');
				
				if(sortLayout.hasErrors()) {
					layout_area.addClass('bg-danger');
					return;
				}

				layout_area.removeClass('bg-danger');
				
				let layout = [];

				let current_group = null;


				layout_area.find('.sortable-item').each(function (i, item) {
					item = $( item );
					let id = item.data('id');

					if(item.hasClass('property')) {
						if(current_group) {
							layout.push('g:'+current_group+':'+id);
						} else {
							layout.push('p:'+id);
						}
						return;
					}

					if(item.hasClass('group-start')) {
						current_group = id;
					}

					if(item.hasClass('group-end')) {
						current_group = null;
					}

				});

				layout = layout.join(';');

				$.get('<?=Http_Request::currentURI(
					set_GET_params: ['p_action'=>'set_layout'],
					unset_GET_params: ['property_id', 'group_id'])?>&layout='+layout);
				
			},

			hasErrors: function () {
				let error_found = false;
				
				let group_start = null;
				let property_counter = 0;
				
				$('#layout').find('.sortable-item').each(function (i, item) {
					if(error_found) {
						return;
					}
					
					item = $( item );
					
					if(item.hasClass('property')) {
						property_counter++;
						if(group_start) {
							item.addClass('property-in-group');
						} else {
							item.removeClass('property-in-group');
						}
						return;
					}

					if(item.hasClass('group-start')) {
						if(!group_start) {
							group_start = item;
							property_counter = 0;
							return;
						}
						
						error_found = true;
						return;
					}

					if(item.hasClass('group-end')) {
						if(!group_start) {
							error_found = true;
							return;
						}

						if(item.data('id')!=group_start.data('id')) {
							error_found = true;
							
							return;
						}
						
						if(property_counter == 0) {
							error_found = true;

							return;
						}

						property_counter = 0;
						group_start = null;
					}
					
					
				});
					
				return error_found;
			}
		};


		
		
	</script>
<?php endif; ?>

<style>
	.property-in-group {
		margin-left: 20px;
		margin-right: 20px;
	}
</style>

<div id="main-col">
		<?=$this->getRaw('tabs')?>
		
		<div class="toolbar">
			<?php if( $editable ): ?>
				<div style="display: flex;align-items: center;margin-bottom: 10px;">
					<div style="padding-left: 30px;width: 200px;"><?=Tr::_('Add property: ')?></div>
					<div style="width: 400px;">
						<?=Admin_Managers::Property()->renderSelectWidget(
							on_select: "addProperty(selected_item.id)",
							name: 'add_property'
						)?>
					</div>
				</div>
			
				<div style="display: flex;align-items: center;">
					<div style="padding-left: 30px;width: 200px;"><?=Tr::_('Add property group: ')?></div>
					<div style="width: 400px;">
						<?=Admin_Managers::PropertyGroup()->renderSelectWidget( "addGroup(selected_item.id)" )?>
					</div>
				</div>

			<?php endif; ?>
		</div>
		
		<div id="layout" style="padding: 10px;">
			<?php
			require 'properties/layout.phtml';
			?>
		</div>
</div>
