<?php
/**
 * @copyright Copyright (c) Miroslav Marek <mirek.marek@web-jet.cz>
 * @license EUPL 1.2  https://eupl.eu/1.2/en/
 * @author Miroslav Marek <mirek.marek@web-jet.cz>
 */

use Jet\MVC;
use Jet\MVC_View;
use Jet\Tr;
use Jet\UI;
use Jet\UI_button;
use Jet\UI_tabsJS;
use Jet\Form;
use JetApplication\EShops;

/**
 * @var MVC_View $this
 * @var UI_tabsJS $tabs
 * @var Form $form
 */

$tabs = $this->getRaw('tabs');
$form = $this->getRaw('form');

$form_fields = [];
if(
	$form &&
	!$form->getIsReadonly() &&
	EShops::isMultilanguageMode()
) {
	foreach($form->getFields() as $field) {
		if( str_starts_with( $field->getName(), '/description/' ) ) {
			$name = explode( '/', $field->getName() );
			$form_fields[ $name[3] ] = str_replace(':', ' ', $field->getLabel()).' ('.str_replace('_', ' ', $name[3]).')';
		}
	}
}



if($form_fields ):
	foreach( EShops::getAvailableLocales() as $locale) {
		$tabs->tab( $locale->toString() )->addJsAction('onclick', "UI_DescriptionBlock.onSelect('".$locale->toString()."');");
	}
	
	$copy_dialog = UI::dialog('copy_dialog', Tr::_('Copy', dictionary: Tr::COMMON_DICTIONARY));
	
	echo $copy_dialog->start();
	?>
	<h5><?=Tr::_('Form fields', dictionary: Tr::COMMON_DICTIONARY)?></h5>
	<div style="display: grid;grid-template-columns: 20px auto; gap: 10px;align-items: center;margin: 20px;">
		<?php foreach( $form_fields as $name=>$label): ?>
			<div><input type="checkbox" name="__copy_form_field_<?=$name?>" id="__copy_form_field_<?=$name?>" value="<?=$name?>" class="__copy_form_field"></div>
			<div><label for="__copy_form_field_<?=$name?>" style="margin: 0px;padding: 0px;"><?=$label;?></label></div>
		<?php endforeach; ?>
	</div>


	<h5><?=Tr::_('Source locale', dictionary: Tr::COMMON_DICTIONARY)?></h5>
	<div style="display: grid;grid-template-columns: 20px auto; gap: 10px;align-items: center;margin: 20px;">
		<?php foreach( EShops::getAvailableLocales() as $locale): ?>
		<div><input type="radio" name="__copy_source" id="__copy_source_<?=$locale?>" value="<?=$locale?>" class="__copy_source" onclick="UI_DescriptionBlock.copyContentSourceSelected('<?=$locale?>');"></div>
		<div><label for="__copy_source_<?=$locale?>" style="margin: 0px;padding: 0px;"><?=UI::flag( $locale )?> <?=$locale->getLanguageName( $locale )?></label></div>
		<?php endforeach; ?>
	</div>

	<h5><?=Tr::_('Target locale', dictionary: Tr::COMMON_DICTIONARY)?></h5>
	<div style="display: grid;grid-template-columns: 20px auto; gap: 10px;align-items: center;margin: 20px;">
		<?php foreach( EShops::getAvailableLocales() as $locale): ?>
			<div><input type="checkbox" name="__copy_target_<?=$locale?>" id="__copy_target_<?=$locale?>" value="<?=$locale?>" class="__copy_target"></div>
			<div><label for="__copy_target_<?=$locale?>" style="margin: 0px;padding: 0px;"><?=UI::flag( $locale )?> <?=$locale->getLanguageName( $locale )?></label></div>
		<?php endforeach; ?>
	</div>

	<?php
	echo $copy_dialog->footer();
		echo UI::button( Tr::_('Copy', dictionary: Tr::COMMON_DICTIONARY) )
			->setOnClick("UI_DescriptionBlock.copyContent();")
			->setClass( UI_button::CLASS_PRIMARY );
	echo $copy_dialog->end();
	
	
	?>


	<script>
		
		const UI_DescriptionBlock = {
			copy_form: null,
			translate_content: false,
			
			onSelect: ( locale ) => {
				Cookies.set('selected_description_locale', locale, undefined, '/');
			},
			
			init: () => {
				let tab = Cookies.get('selected_description_locale');

				if(tab) {
					$('.nav-tabs a[href="#' + tab + '"]').tab('show');
				}
			},
			
			copyContentStart: ( source_locale, form, translate_content ) => {
				UI_DescriptionBlock.copy_form = form;
				UI_DescriptionBlock.translate_content = translate_content;
				
				[...document.getElementsByClassName('__copy_source')].forEach( ( el ) => {
					el.checked = el.value == source_locale;
				} );

				[...document.getElementsByClassName('__copy_target')].forEach( ( el ) => {
					el.checked = el.value != source_locale;
					el.disabled = !el.checked;
				} );
				
				$('#copy_dialog').modal('show');
			},

			copyContentSourceSelected: ( source_locale ) => {
				[...document.getElementsByClassName('__copy_target')].forEach( ( el ) => {
					el.checked = el.value != source_locale;
					el.disabled = !el.checked;
				} );
			},
			
			copyContent: async  () => {
				$('#__progress__').show();
				
				let source_locale = '';
				let target_locales = [];
				let form_fields = [];

				[...document.getElementsByClassName('__copy_source')].forEach( ( el ) => {
					if(el.checked) {
						source_locale = el.value;
					}
				} );
				
				
				[...document.getElementsByClassName('__copy_form_field')].forEach( ( el ) => {
					if(el.checked) {
						form_fields.push(el.value);
					}
				} );

				[...document.getElementsByClassName('__copy_target')].forEach( ( el ) => {
					if(
						el.checked &&
						el.value!=source_locale
					) {
						target_locales.push( el.value );
					}
				} );

				let source_data = {};
				[...UI_DescriptionBlock.copy_form.elements].forEach( ( el ) => {
					if(!el.name.startsWith('description['+source_locale+'][')) {
						return;
					}
					
					let name = el.name.substring( ('description['+source_locale+']').length );
					name = name.replace('[', '');
					name = name.replace(']', '');
					
					if(!form_fields.includes(name)) {
						return;
					}
					
					switch(el.type) {
						case 'checkbox':
						case 'radio':
							source_data[name] = el.checked;
							break;
						case 'select-one':
							source_data[name] = el.options[el.selectedIndex].value;
							break;
						case 'select-multiple':
							source_data[name] = [];
							[...el.options].forEach( ( option ) => {
								if(option.selected) {
									source_data[name].push( option.value );
								}
							} );
							break;
						default:
							source_data[name] = el.value;
							break;
					}
					
				} );
				

				for( let c=0;c<UI_DescriptionBlock.copy_form.elements.length;c++ ) {
					const el = UI_DescriptionBlock.copy_form.elements[c];

					if(!el.name.startsWith('description[')) {
						continue;
					}
					
					for(let l=0;l<target_locales.length;l++) {
						let target_locale = target_locales[l];

						if(!el.name.startsWith('description['+target_locale+'][')) {
							continue;
						}
						let name = el.name.substring( ('description['+target_locale+']').length );
						name = name.replace('[', '');
						name = name.replace(']', '');

						if(!form_fields.includes(name)) {
							continue;
						}
						

						switch(el.type) {
							case 'checkbox':
							case 'radio':
								el.checked = source_data[name];
								break;
							case 'select-one':
								[...el.options].forEach( ( option ) => {
									option.selected = source_data[name] == option.value;
								} );
								break;
							case 'select-multiple':
								[...el.options].forEach( ( option ) => {
									option.selected = source_data[name].includes( option.value );
								} );
								break;
							case 'number':
								el.value = source_data[name];
								break;
							default:
								if(UI_DescriptionBlock.translate_content) {

									let rq = new FormData();
									rq.set('from_locale', source_locale);
									rq.set('to_locale', target_locale);
									rq.set('text', source_data[name]);

									const response = await fetch(
										'<?=MVC::getPage('entity-edit-services')->getURLPath(GET_params: ['action'=>'translate'])?>',
										{
											method: 'POST',
											body: rq
										});
									
									const data = await response.json();
									
									
									if(data['result']=='ok') {
										el.value = data['data']['translation'];
									} else {
										alert( data['data']['error_message'] );
									}
									
								} else {
									el.value = source_data[name];
								}
								break;
						}

					}
				}

				$('#__progress__').hide();
				$('#copy_dialog').modal('hide');
			}
		};
		
	</script>
<?php
endif;


echo $tabs->start();
