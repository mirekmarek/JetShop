<?php
namespace JetApplicationModule\Shop\CashDesk;

use Jet\SysConf_URI;

$cash_desk = CashDesk::get();


?>
<style>
	#cash_desk_overview {
		padding: 20px;
	}
	
	.method, .method-selected {
		display: grid;
		grid-template-columns: 20px 70px 1fr 150px;align-items: center;
		padding: 10px;
		border-radius: 5px;
		margin: 15px;
	}
	
	.method-selected {
		background-color: #dcdbdb;
	}

	.option, .option-selected {
		display: grid;
		grid-template-columns: 20px 50px 1fr;align-items: center;
		padding: 5px;
		border-radius: 5px;
		margin: 5px;
	}

	.option-selected {
		background-color: #969696;
	}
	
	
	.method-has-been-selected {
		display: grid;
		grid-template-columns: 200px 1fr 1fr 100px;align-items: center
	}
	
	.step-block {
		background-color: #f8f9fa;
		border: 1px solid #dedede;
		border-radius: 5px;
		padding: 10px;
		margin-top: 20px;
		margin-bottom: 20px;
	}
	
	.selected-contact {
		display: grid;
		grid-template-columns: 200px 300px 1fr;
		margin-bottom: 20px;
	}
	
	.step-title {
		font-weight: bolder;
		font-size: 1.2rem;
	}
	
	.continue-button-area {
		padding: 5px;
		text-align: right;
	}
	
	.price-standard {
		text-decoration: line-through;
	}
	
	.price-final {
		font-weight: bolder;
	}
	
	.method-icon {
		padding: 5px;
	}

	.method-title {
		padding: 5px;
	}
	
	.method-title>div{
		font-size: 0.8rem;
	}
	
	.addresses {
		display: grid;
		padding-left: 10%;
		padding-right: 10%;
		grid-template-columns: 1fr 1fr 1fr;
		grid-gap: 10px;
	}
	
	.address {
		padding: 10px;
		background-color: #ffffff;
		border: 1px solid #dedede;
		border-radius: 5px;
	}

	.address-selected {
		padding: 10px;
		background-color: #bebebe;
		border: 1px solid #dedede;
		border-radius: 5px;
	}
	
</style>
<script type="text/javascript" src="//maps.google.com/maps/api/js?key=<?=Config::map_API_key($cash_desk)?>"></script>
<script type="text/javascript" src="<?=SysConf_URI::getJs()?>GMmarkerclusterer.js"></script>


<script type="text/javascript">
	const CashDesk = {
		step: '<?=$cash_desk->getCurrentStep()?>',
		selected_delivery: '<?=$cash_desk->getSelectedDeliveryMethod()->getId()?>',
		selected_payment: '<?=$cash_desk->getSelectedPaymentMethod()->getId()?>',
		billing_address_editable: <?=$cash_desk->isBillingAddressEditable() ? 'true' : 'false'?>,
		delivery_address_editable: <?=$cash_desk->isDeliveryAddressEditable() ? 'true' : 'false' ?>,


		_request: {
			doGet: function( URL, onOk, onError, do_not_apply_snippets ) {
				$.ajax({
					type: 'GET',
					url: URL,
					dataType: 'json',
					success: function(response) {
						CashDesk._request.handleResponse( response, onOk, onError, do_not_apply_snippets );
					},
					error: function() {
						CashDesk._request.handleError();
					},
					complete: function() {
					}
				});

			},
			doForm: function( form_id, onOk, onError, do_not_apply_snippets ) {
				const form = $('#'+form_id);

				$.ajax({
					type: 'POST',
					url: form.attr('action'),
					data: form.serialize(),
					dataType: 'json',
					success: function(response) {
						CashDesk._request.handleResponse( response, onOk, onError, do_not_apply_snippets );
					},
					error: function() {
						CashDesk._request.handleError();
					},
					complete: function() {
					}
				});

			},
			handleError: function () {
				//TODO:
			},
			handleResponse: function (response, onOk, onError, do_not_apply_snippets) {

				CashDesk.selected_delivery = response['selected_delivery'];
				CashDesk.selected_payment = response['selected_payment'];

				if(!do_not_apply_snippets) {
					CashDesk._request.applySnippets( response );
				}

				if( response.ok && onOk ) {
					onOk( response );
				}

				if(!response.ok && onError) {
					onError( response );
				}
			},

			applySnippets: function( response ) {
				if(response['snippets']) {
					for(let id in response['snippets']) {
						let element = $('#'+id);
						if(element.length) {
							element.html(response['snippets'][id]);
						}
					}
				}

				CashDesk.delivery.personalTakeover.initialized = false;

				if(CashDesk.billing_address_editable!=response.billing_address_editable) {
					CashDesk.billing_address_editable=response.billing_address_editable;
					if(CashDesk.billing_address_editable) {
						CashDesk.customer.billingAddress.initEdit();
					} else {
						CashDesk.customer.billingAddress.disableEdit();
					}
				}

				if(CashDesk.delivery_address_editable!=response.delivery_address_editable) {
					CashDesk.delivery_address_editable=response.delivery_address_editable;
					if(CashDesk.delivery_address_editable) {
						CashDesk.customer.deliveryAddress.initEdit();
					} else {
						CashDesk.customer.deliveryAddress.disableEdit();
					}
				}

			}
		},
		delivery: {

			select: function( method ) {
				if(CashDesk.selected_delivery==method) {
					return;
				}
				CashDesk.selected_delivery=method;
				CashDesk._request.doGet('?action=select_delivery&method=' + method);
			},

			back: function() {
				CashDesk.slideUp('cash_desk_confirm', function () {
					CashDesk.slideUp('cash_desk_customer', function () {
						CashDesk.slideUp('cash_desk_payment', function () {
							CashDesk.slideUp('cash_desk_delivery', function () {
								CashDesk._request.doGet('?action=back_to_delivery', function () {
									CashDesk.slideDown('cash_desk_delivery');
								});
							});
						});
					});
				});
			},

			continue: function() {
				CashDesk.slideUp('cash_desk_delivery', function () {
					CashDesk._request.doGet('?action=continue_to_payment', function () {
						CashDesk.slideDown('cash_desk_delivery', function () {
							CashDesk.slideDown('cash_desk_payment');
						});
					});
					
				});
			},

			personalTakeover: {
				
				initialized: false,
				map_instance: null,

				map: {
					center: {
						lat: 0,
						lon: 0,
					},
					default_zoom: 0
				},

				init: function( onInit ) {
					if(CashDesk.delivery.personalTakeover.initialized) {
						onInit();
						return;
					}

					$.get( '?action=personal_takeover_get_map_data', function( map_data ) {
						map_data = JSON.parse(map_data);
						
						let map_instance = new google.maps.Map( document.getElementById('personal_takeover_map'),{});
						let markers = {};

						CashDesk.delivery.personalTakeover.map_instance = map_instance;

						for( let id in map_data ) {
							let marker_data = map_data[id];
							let marker_options= {};

							marker_options.title = marker_data.name;
							marker_options.position = new google.maps.LatLng(marker_data.latitude, marker_data.longitude);

							if(marker_data.icon) {
								marker_options.icon = new google.maps.MarkerImage(marker_data.icon);
							}

							let marker = new google.maps.Marker(marker_options);
							marker.marker_data = marker_data;

							marker.setMap( map_instance );

							markers[id] = marker;

							marker.addListener("click",  () => {

								map_instance.setCenter(markers[id].getPosition());
								map_instance.setZoom(20);

								CashDesk.delivery.personalTakeover.showPlace( id );
							});

						}

						map_instance.setCenter( new google.maps.LatLng(
							CashDesk.delivery.personalTakeover.map.center.lat,
							CashDesk.delivery.personalTakeover.map.center.lon
						) );
						map_instance.setZoom(
							CashDesk.delivery.personalTakeover.map.default_zoom
						);

						let marker_cluster_instance = new MarkerClusterer(
							map_instance,
							markers,
							{imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'}
						);

						CashDesk.delivery.personalTakeover.initialized = true;
						onInit();
					});

				},

				startSelection: function() {
					$('#select_personal_takeover_place_dialog').modal('show');
					setTimeout(function () {
						$('#personal_takeover_map').height(
							$('#select_personal_takeover_place_dialog__body').height()
						);

						$('#personal_takeover_map').width(
							$('#select_personal_takeover_place_dialog__col').width()
						);

					}, 500);
					
					CashDesk.delivery.personalTakeover.init( function() {
					} );
				},

				showPlace: function ( id ) {
					$('#personal_takeover_place').load('?action=personal_takeover_show_place&id='+id, function () {
						$('#select_personal_takeover_selected_place_dialog').modal('show');
					});
				},

				selectPlace: function( method_code, place_code ) {
					setTimeout(function () {
						CashDesk._request.doGet('?action=personal_takeover_select_place&method=' + method_code+'&place='+place_code);
					}, 10);
					
					$('#select_personal_takeover_place_dialog').modal('hide');
					$('#select_personal_takeover_selected_place_dialog').modal('hide');
					
				}
				
				
			}
		},

		payment: {
			select: function( method ) {
				if(CashDesk.selected_payment==method) {
					return;
				}
				CashDesk.selected_payment=method;
				CashDesk._request.doGet('?action=select_payment&method=' + method);
			},

			selectOption: function( option ) {
				CashDesk._request.doGet('?action=select_payment_option&option=' + option);
			},


			back: function() {
				CashDesk.slideUp('cash_desk_confirm', function () {
					CashDesk.slideUp('cash_desk_customer', function () {
						CashDesk.slideUp('cash_desk_payment', function () {
							CashDesk._request.doGet('?action=back_to_payment', function () {
								CashDesk.slideDown('cash_desk_payment');
							});

						});
					});
				});
				
			},

			continue: function() {
				CashDesk.slideUp('cash_desk_customer', function () {
					CashDesk._request.doGet('?action=continue_to_customer',
						function(response) {
							CashDesk.slideUp('cash_desk_payment', function () {
								CashDesk.slideDown('cash_desk_payment', function () {
									CashDesk.slideDown('cash_desk_customer', function () {
										if(response['is_ready']) {
											CashDesk.slideDown('cash_desk_confirm', function () {});
										}
									});
								});
							}, null, true);
						}
					);
				});

			},

			setPaymentOptions: function( method, callback ) {
				CashDesk._request.doForm('payment_method_options_form_'+method, callback);
			}

		},

		customer: {

			email: {
				set: function() {
					CashDesk._request.doForm( 'cash_desk_set_email_form',
						function(response) {
							CashDesk.slideUp('cash_desk_customer', function () {
								CashDesk._request.applySnippets( response );
								CashDesk.slideDown('cash_desk_customer', function () {
									if(response['is_ready']) {
										CashDesk.slideDown('cash_desk_confirm', function () {});
									}
								});
							});
						},
						function(response) {
							CashDesk._request.applySnippets( response );
						},
						true
					);

				},

				back: function() {
					CashDesk.slideUp('cash_desk_confirm', function () {
						CashDesk.slideUp('cash_desk_customer', function () {
							CashDesk._request.doGet('?action=customer_back_to_set_email', function() {
								CashDesk.slideDown('cash_desk_customer');
							});
						});
					});
				}
			},
			
			phone: {
				set: function() {
					CashDesk._request.doForm( 'cash_desk_set_phone_form',
						function(response) {
							CashDesk.slideUp('cash_desk_customer', function () {
								CashDesk._request.applySnippets( response );
								CashDesk.slideDown('cash_desk_customer', function () {
									if(response['is_ready']) {
										CashDesk.slideDown('cash_desk_confirm', function () {});
									}
								});
							});
						},
						function(response) {
							CashDesk._request.applySnippets( response );
						},
						true
					);
				},
				back: function() {
					CashDesk.slideUp('cash_desk_confirm', function () {
						CashDesk.slideUp('cash_desk_customer', function () {
							CashDesk._request.doGet('?action=customer_back_to_set_phone', function() {
								CashDesk.slideDown('cash_desk_customer');
							});
						});
					});
				}
			},

			billingAddress: {
				whisperer: null,
				form: null,

				initEdit: function() {
					//TODO:
					/*
					CashDesk.customer.billingAddress.whisperer = new addressWhisperer('new_billing');
					CashDesk.customer.billingAddress.whisperer.init();
					 */
				},

				setIsPerson: function() {
					CashDesk._request.doGet('?action=customer_set_is_person', function() {});

				},
				setIsCompany: function() {
					CashDesk._request.doGet('?action=customer_set_is_company', function() {});
				},

				disableEdit: function() {
					CashDesk.customer.billingAddress.whisperer = null;
				},

				select: function( id ) {
					CashDesk._request.doGet('?action=customer_billing_address_select&id='+id);
				},

				sendField: function( field ) {
					let field_name = field.name;
					let value = field.value;

					CashDesk._request.doGet(
						'?action=customer_billing_address_catch_field&field='+field_name+'&value='+encodeURIComponent(value)
					);
				},

				confirm: function() {
					const onResponse = function( response ) {
						if(response.ok) {
							CashDesk.slideUp('cash_desk_delivery_address', function () {
								CashDesk.slideUp('cash_desk_billing_address', function () {
									CashDesk._request.handleResponse(response);

									CashDesk.slideDown('cash_desk_delivery_address', function () {
										CashDesk.slideDown('cash_desk_billing_address', function () {
											if(response['is_ready']) {
												CashDesk.slideDown('cash_desk_confirm', function () {});
											}
											
										});
									});
								});
								
							});


						}
					};

					CashDesk._request.doForm( 'cash_desk_customer_billing_address_form', onResponse, null, true);
				},

				back: function() {
					CashDesk.slideUp('cash_desk_confirm', function () {
						CashDesk.slideUp( 'cash_desk_delivery_address', function () {
							CashDesk.slideUp('cash_desk_billing_address', function () {
								CashDesk._request.doGet('?action=customer_back_to_billing_address', function () {
									CashDesk.slideDown('cash_desk_billing_address');
								});
							});
							
						} );
					});


				}
			},

			deliveryAddress: {
				whisperer: null,
				form: null,

				setTheSame: function() {
					CashDesk.slideUp('cash_desk_delivery_address', function () {
						CashDesk._request.doGet('?action=customer_delivery_address_set_the_same', function () {
							CashDesk.slideDown('cash_desk_delivery_address');
						});
					});
					
				},

				setTheSameConfirm: function() {
					CashDesk.slideUp('cash_desk_delivery_address', function () {
						CashDesk._request.doGet('?action=customer_delivery_address_set_the_same_confirm', function () {
							CashDesk.slideDown('cash_desk_delivery_address', function () {
								CashDesk.slideDown('cash_desk_confirm');
							});
						});
					});

				},
				
				setDifferent: function() {
					CashDesk.slideUp('cash_desk_delivery_address', function () {
						CashDesk._request.doGet('?action=customer_delivery_address_set_different', function () {
							CashDesk.slideDown('cash_desk_delivery_address');
						});
					});

				},

				initEdit: function() {
					//TODO:
					/*
					CashDesk.customer.deliveryAddress.whisperer = new addressWhisperer('new_delivery');
					CashDesk.customer.deliveryAddress.whisperer.init();
					 */
				},

				disableEdit: function() {
					CashDesk.customer.deliveryAddress.whisperer = null;
				},

				select: function( id ) {
					CashDesk._request.doGet('?action=customer_delivery_address_select&id='+id);
				},

				sendField: function( field ) {
					let field_name = field.name;
					let value = field.value;

					CashDesk._request.doGet(
						'?action=customer_delivery_address_catch_field&field='+field_name+'&value='+encodeURIComponent(value)
					);
				},


				confirm: function() {
					const onResponse = function( response ) {
						if(response.ok) {
							CashDesk.slideUp('cash_desk_delivery_address', function () {
								CashDesk._request.handleResponse(response);

								CashDesk.slideDown('cash_desk_delivery_address', function () {
									CashDesk.slideDown('cash_desk_confirm');
								});
							});
						}
					};

					CashDesk._request.doForm( 'cash_desk_customer_delivery_address_form', onResponse, null, true);
				},

				back: function() {
					CashDesk.slideUp('cash_desk_confirm', function () {
						CashDesk.slideUp('cash_desk_delivery_address', function () {

							CashDesk._request.doGet('?action=customer_back_to_delivery_address', function () {
								CashDesk.slideDown('cash_desk_delivery_address');
							});

						});
					});
				}

			},



			registration: {
				login: function() {

					CashDesk._request.doForm( 'cash_desk_login_form',
						function(response) {
							CashDesk.slideUp('cash_desk_customer', function () {
								CashDesk._request.applySnippets(response);

								CashDesk.slideDown('cash_desk_customer');
							});
						},
						function(response) {
							CashDesk._request.applySnippets(response);
						},

						true
					);

				},

				continueWithoutRegistration: function() {
					CashDesk.slideUp('cash_desk_customer');

					CashDesk._request.doGet('?action=customer_registration_do_not_register', function () {
						CashDesk.slideDown('cash_desk_customer');
					});
				},

				setPassword: function() {
					CashDesk._request.doForm('registration_set_password_form',
						function( response ) {
							CashDesk.slideUp('cash_desk_confirm', function () {
								CashDesk.slideUp('cash_desk_customer', function() {
									CashDesk._request.applySnippets(response);
									CashDesk.slideDown('cash_desk_customer', function () {
										if(response['is_ready']) {
											CashDesk.slideDown('cash_desk_confirm', function () {});
										}
									});
								});
							});
						},
						function( response ) {
							CashDesk._request.applySnippets(response);
						},
						true
					);
				},

				doNotRegister: function() {
					CashDesk.slideUp('cash_desk_customer', function () {
						CashDesk._request.doGet('?action=customer_registration_do_not_register', function () {
							CashDesk.slideDown('cash_desk_customer');
						});
					});

				},

				back: function() {
					CashDesk.slideUp('cash_desk_confirm', function () {
						CashDesk.slideUp('cash_desk_customer', function () {
							CashDesk._request.doGet('?action=customer_registration_back', function () {
								CashDesk.slideDown('cash_desk_customer');
							});
						});
					});

				}
			}


		},

		confirm: {
			saveSpecialRequirement: function() {
				CashDesk._request.doForm('cash_desk_special_requirements_form');
			},

			toggleAgreeFlag: function( code, checked ) {
				CashDesk._request.doGet('?action=confirm_toggle_agree_flag&flag='+code+'&state='+(checked?'1':'0') );

			},

			send: function() {

				$('#cash_desk_order_send_button_area').fadeOut('fast', function () {
					CashDesk._request.doGet(
						'?action=confirm_send',
						function( response ) {
							location = response.data.URL;
						},
						function( response ) {
							CashDesk._request.applySnippets(response);
						},
						true
					);
				});
			}
		},
		
		slideUp: function (element_id, after) {
			$('#'+element_id).slideUp('fast', after);
		},

		slideDown: function (element_id, after) {
			$('#'+element_id).slideDown('fast', after);
		},
		

		scrollTo: function(element_id) {
			let header = $('header').outerHeight() + $('#cash_desk_status_bar_steps').outerHeight();
		
			$('html, body').animate({
				scrollTop: $('#' + element_id).offset().top - header
			}, 200, 'swing');
		},
	};

	CashDesk.delivery.personalTakeover.map = {
		center: {
			lat: <?=Config::map_center_lat( $cash_desk )?>,
			lon: <?=Config::map_center_lon( $cash_desk )?>,
		},
		default_zoom: <?=Config::map_default_zoom( $cash_desk )?>
	};


	<?php if($cash_desk->isBillingAddressEditable()): ?>
		CashDesk.customer.billingAddress.initEdit();
	<?php endif; ?>
	<?php if($cash_desk->isDeliveryAddressEditable()): ?>
		CashDesk.customer.deliveryAddress.initEdit();
	<?php endif; ?>

</script>
